State 23 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 @2: %empty

   14 struct_specifier: STRUCT ID '{' @2 def_list '}'
   15                 | STRUCT ID

   16 func_decl: type_specifier pointers ID '(' ')'
   17          | type_specifier pointers ID '(' VOID ')'

   18 @3: %empty

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 @4: %empty

   33 $@5: %empty

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'

   41 $@6: %empty

   42 stmt: RETURN $@6 expr ';'
   43     | ';'
   44     | IF LABEL '(' expr ')' BRANCH stmt LABEL

   45 $@7: %empty

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL
   47     | WHILE '(' expr ')' stmt
   48     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   49     | BREAK ';'
   50     | CONTINUE ';'
   51     | READ_INT '(' expr ')'
   52     | READ_CHAR '(' expr ')'
   53     | WRITE_INT '(' expr ')'
   54     | WRITE_CHAR '(' expr ')'
   55     | WRITE_STRING '(' expr ')'

   56 LABEL: %empty

   57 BRANCH: %empty

   58 expr_e: expr
   59       | %empty

   60 const_expr: expr

   61 $@8: %empty

   62 expr: unary $@8 '=' expr
   63     | or_expr

   64 or_expr: or_list

   65 or_list: or_list LOGICAL_OR and_expr
   66        | and_expr

   67 and_expr: and_list

   68 $@9: %empty

   69 and_list: and_list LOGICAL_AND $@9 binary
   70         | binary

   71 $@10: %empty

   72 binary: binary RELOP $@10 binary

   73 $@11: %empty

   74 binary: binary EQUOP $@11 binary

   75 $@12: %empty

   76 binary: binary '+' $@12 binary

   77 $@13: %empty

   78 binary: binary '-' $@13 binary
   79       | unary

   80 unary: '(' expr ')'
   81      | '(' unary ')'
   82      | INTEGER_CONST
   83      | CHAR_CONST
   84      | STRING
   85      | ID
   86      | '-' unary
   87      | '!' unary
   88      | unary INCOP
   89      | unary DECOP
   90      | INCOP unary
   91      | DECOP unary
   92      | '&' unary
   93      | '*' unary
   94      | unary '[' expr ']'
   95      | unary '.' ID
   96      | unary STRUCTOP ID

   97 $@14: %empty

   98 unary: unary '(' $@14 args ')'
   99      | unary '(' ')'

  100 args: args ',' expr
  101     | expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 87
'&' (38) 92
'(' (40) 16 17 19 44 46 47 48 51 52 53 54 55 80 81 98 99
')' (41) 16 17 19 44 46 47 48 51 52 53 54 55 80 81 98 99
'*' (42) 20 93
'+' (43) 76
',' (44) 23 100
'-' (45) 78 86
'.' (46) 95
';' (59) 4 5 6 7 28 29 30 31 38 40 42 43 48 49 50
'=' (61) 62
'[' (91) 5 25 29 94
']' (93) 5 25 29 94
'{' (123) 14 34
'}' (125) 14 34
error (256)
ID (258) 4 5 14 15 16 17 19 24 25 28 29 85 95 96
TYPE (259) 10
VOID (260) 11 17
ELSE (261) 46
LOGICAL_OR (262) 65
LOGICAL_AND (263) 69
EQUOP (264) 74
RELOP (265) 72
INCOP (266) 88 90
DECOP (267) 89 91
STRUCTOP (268) 96
STRUCT (269) 14 15
CHAR_CONST (270) 83
STRING (271) 84
INTEGER_CONST (272) 82
RETURN (273) 40 42
IF (274) 44 46
WHILE (275) 47
FOR (276) 48
BREAK (277) 49
CONTINUE (278) 50
READ_INT (279) 51
READ_CHAR (280) 52
WRITE_INT (281) 53
WRITE_CHAR (282) 54
WRITE_STRING (283) 55


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
ext_def_list (46)
    on left: 2 3, on right: 1 2
ext_def (47)
    on left: 4 5 6 7 9, on right: 2
$@1 (48)
    on left: 8, on right: 9
type_specifier (49)
    on left: 10 11 12, on right: 4 5 7 16 17 19 24 25 28 29 30
struct_specifier (50)
    on left: 14 15, on right: 12
@2 (51)
    on left: 13, on right: 14
func_decl (52)
    on left: 16 17 19, on right: 6 9 31
@3 (53)
    on left: 18, on right: 19
pointers (54)
    on left: 20 21, on right: 4 5 16 17 19 24 25 28 29
param_list (55)
    on left: 22 23, on right: 19 23
param_decl (56)
    on left: 24 25, on right: 22 23
def_list (57)
    on left: 26 27, on right: 14 26 35
def (58)
    on left: 28 29 30 31, on right: 26
compound_stmt (59)
    on left: 34, on right: 9 39
@4 (60)
    on left: 32, on right: 34
$@5 (61)
    on left: 33, on right: 34
local_defs (62)
    on left: 35, on right: 34
stmt_list (63)
    on left: 36 37, on right: 34 36
stmt (64)
    on left: 38 39 40 42 43 44 46 47 48 49 50 51 52 53 54 55, on right:
    36 44 46 47 48
$@6 (65)
    on left: 41, on right: 42
$@7 (66)
    on left: 45, on right: 46
LABEL (67)
    on left: 56, on right: 44 46
BRANCH (68)
    on left: 57, on right: 44 46
expr_e (69)
    on left: 58 59, on right: 48
const_expr (70)
    on left: 60, on right: 5 25 29
expr (71)
    on left: 62 63, on right: 38 42 44 46 47 51 52 53 54 55 58 60 62
    80 94 100 101
$@8 (72)
    on left: 61, on right: 62
or_expr (73)
    on left: 64, on right: 63
or_list (74)
    on left: 65 66, on right: 64 65
and_expr (75)
    on left: 67, on right: 65 66
and_list (76)
    on left: 69 70, on right: 67 69
$@9 (77)
    on left: 68, on right: 69
binary (78)
    on left: 72 74 76 78 79, on right: 69 70 72 74 76 78
$@10 (79)
    on left: 71, on right: 72
$@11 (80)
    on left: 73, on right: 74
$@12 (81)
    on left: 75, on right: 76
$@13 (82)
    on left: 77, on right: 78
unary (83)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 98
    99, on right: 62 79 81 86 87 88 89 90 91 92 93 94 95 96 98 99
$@14 (84)
    on left: 97, on right: 98
args (85)
    on left: 100 101, on right: 98 100


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   14 struct_specifier: STRUCT . ID '{' @2 def_list '}'
   15                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   14 struct_specifier: STRUCT ID . '{' @2 def_list '}'
   15                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 15 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   14 struct_specifier: STRUCT ID '{' . @2 def_list '}'

    $default  reduce using rule 13 (@2)

    @2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 compound_stmt: '{' . @4 local_defs $@5 stmt_list '}'

    $default  reduce using rule 32 (@4)

    @4  go to state 25


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   14 struct_specifier: STRUCT ID '{' @2 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 38
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 23

   16 func_decl: type_specifier pointers ID '(' . ')'
   17          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . @3 param_list ')'

    VOID  shift, and go to state 46
    ')'   shift, and go to state 47

    VOID      [reduce using rule 18 (@3)]
    $default  reduce using rule 18 (@3)

    @3  go to state 48


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   34 compound_stmt: '{' @4 . local_defs $@5 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 49
    local_defs  go to state 50


State 26

   14 struct_specifier: STRUCT ID '{' @2 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 51

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 27

   85 unary: ID .

    $default  reduce using rule 85 (unary)


State 28

   92 unary: '&' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 55


State 29

   86 unary: '-' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 56


State 30

   93 unary: '*' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 57


State 31

   87 unary: '!' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 58


State 32

   90 unary: INCOP . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 59


State 33

   91 unary: DECOP . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 60


State 34

   80 unary: '(' . expr ')'
   81      | '(' . unary ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 61
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 62


State 35

   83 unary: CHAR_CONST .

    $default  reduce using rule 83 (unary)


State 36

   84 unary: STRING .

    $default  reduce using rule 84 (unary)


State 37

   82 unary: INTEGER_CONST .

    $default  reduce using rule 82 (unary)


State 38

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 39

   60 const_expr: expr .

    $default  reduce using rule 60 (const_expr)


State 40

   63 expr: or_expr .

    $default  reduce using rule 63 (expr)


State 41

   64 or_expr: or_list .
   65 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 64 (or_expr)


State 42

   66 or_list: and_expr .

    $default  reduce using rule 66 (or_list)


State 43

   67 and_expr: and_list .
   69 and_list: and_list . LOGICAL_AND $@9 binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 67 (and_expr)


State 44

   70 and_list: binary .
   72 binary: binary . RELOP $@10 binary
   74       | binary . EQUOP $@11 binary
   76       | binary . '+' $@12 binary
   78       | binary . '-' $@13 binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 70 (and_list)


State 45

   62 expr: unary . $@8 '=' expr
   79 binary: unary .
   88 unary: unary . INCOP
   89      | unary . DECOP
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 61 ($@8)
    $default  reduce using rule 79 (binary)

    $@8  go to state 76


State 46

   17 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 77


State 47

   16 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 16 (func_decl)


State 48

   19 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_list        go to state 79
    param_decl        go to state 80


State 49

   26 def_list: def_list . def
   35 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 50

   34 compound_stmt: '{' @4 local_defs . $@5 stmt_list '}'

    $default  reduce using rule 33 ($@5)

    $@5  go to state 81


State 51

   14 struct_specifier: STRUCT ID '{' @2 def_list '}' .

    $default  reduce using rule 14 (struct_specifier)


State 52

   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 82

    $default  reduce using rule 21 (pointers)

    pointers  go to state 83


State 53

   31 def: func_decl . ';'

    ';'  shift, and go to state 84


State 54

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 55

   88 unary: unary . INCOP
   89      | unary . DECOP
   92      | '&' unary .
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 92 (unary)


State 56

   86 unary: '-' unary .
   88      | unary . INCOP
   89      | unary . DECOP
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 86 (unary)


State 57

   88 unary: unary . INCOP
   89      | unary . DECOP
   93      | '*' unary .
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 93 (unary)


State 58

   87 unary: '!' unary .
   88      | unary . INCOP
   89      | unary . DECOP
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 87 (unary)


State 59

   88 unary: unary . INCOP
   89      | unary . DECOP
   90      | INCOP unary .
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 90 (unary)


State 60

   88 unary: unary . INCOP
   89      | unary . DECOP
   91      | DECOP unary .
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 91 (unary)


State 61

   80 unary: '(' expr . ')'

    ')'  shift, and go to state 85


State 62

   62 expr: unary . $@8 '=' expr
   79 binary: unary .
   81 unary: '(' unary . ')'
   88      | unary . INCOP
   89      | unary . DECOP
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 86
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 61 ($@8)
    $default  reduce using rule 79 (binary)

    $@8  go to state 76


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 87


State 64

   65 or_list: or_list LOGICAL_OR . and_expr

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    and_expr  go to state 88
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 89


State 65

   69 and_list: and_list LOGICAL_AND . $@9 binary

    $default  reduce using rule 68 ($@9)

    $@9  go to state 90


State 66

   74 binary: binary EQUOP . $@11 binary

    $default  reduce using rule 73 ($@11)

    $@11  go to state 91


State 67

   72 binary: binary RELOP . $@10 binary

    $default  reduce using rule 71 ($@10)

    $@10  go to state 92


State 68

   76 binary: binary '+' . $@12 binary

    $default  reduce using rule 75 ($@12)

    $@12  go to state 93


State 69

   78 binary: binary '-' . $@13 binary

    $default  reduce using rule 77 ($@13)

    $@13  go to state 94


State 70

   88 unary: unary INCOP .

    $default  reduce using rule 88 (unary)


State 71

   89 unary: unary DECOP .

    $default  reduce using rule 89 (unary)


State 72

   94 unary: unary '[' . expr ']'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 95
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 73

   98 unary: unary '(' . $@14 args ')'
   99      | unary '(' . ')'

    ')'  shift, and go to state 96

    $default  reduce using rule 97 ($@14)

    $@14  go to state 97


State 74

   95 unary: unary '.' . ID

    ID  shift, and go to state 98


State 75

   96 unary: unary STRUCTOP . ID

    ID  shift, and go to state 99


State 76

   62 expr: unary $@8 . '=' expr

    '='  shift, and go to state 100


State 77

   17 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 17 (func_decl)


State 78

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 101


State 79

   19 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 102
    ')'  shift, and go to state 103


State 80

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 81

   34 compound_stmt: '{' @4 local_defs $@5 . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 104


State 82

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 83

   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 105


State 84

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 85

   80 unary: '(' expr ')' .

    $default  reduce using rule 80 (unary)


State 86

   81 unary: '(' unary ')' .

    $default  reduce using rule 81 (unary)


State 87

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 88

   65 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 65 (or_list)


State 89

   79 binary: unary .
   88 unary: unary . INCOP
   89      | unary . DECOP
   94      | unary . '[' expr ']'
   95      | unary . '.' ID
   96      | unary . STRUCTOP ID
   98      | unary . '(' $@14 args ')'
   99      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 79 (binary)


State 90

   69 and_list: and_list LOGICAL_AND $@9 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 106
    unary   go to state 89


State 91

   74 binary: binary EQUOP $@11 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 107
    unary   go to state 89


State 92

   72 binary: binary RELOP $@10 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 108
    unary   go to state 89


State 93

   76 binary: binary '+' $@12 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 109
    unary   go to state 89


State 94

   78 binary: binary '-' $@13 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 110
    unary   go to state 89


State 95

   94 unary: unary '[' expr . ']'

    ']'  shift, and go to state 111


State 96

   99 unary: unary '(' ')' .

    $default  reduce using rule 99 (unary)


State 97

   98 unary: unary '(' $@14 . args ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 112
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45
    args      go to state 113


State 98

   95 unary: unary '.' ID .

    $default  reduce using rule 95 (unary)


State 99

   96 unary: unary STRUCTOP ID .

    $default  reduce using rule 96 (unary)


State 100

   62 expr: unary $@8 '=' . expr

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 114
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 101

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 115


State 102

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_decl        go to state 116


State 103

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 104

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 117
    IF             shift, and go to state 118
    WHILE          shift, and go to state 119
    FOR            shift, and go to state 120
    BREAK          shift, and go to state 121
    CONTINUE       shift, and go to state 122
    READ_INT       shift, and go to state 123
    READ_CHAR      shift, and go to state 124
    WRITE_INT      shift, and go to state 125
    WRITE_CHAR     shift, and go to state 126
    WRITE_STRING   shift, and go to state 127
    ';'            shift, and go to state 128
    '{'            shift, and go to state 19
    '}'            shift, and go to state 129

    compound_stmt  go to state 130
    stmt           go to state 131
    expr           go to state 132
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 105

   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 133
    '('  shift, and go to state 23
    ';'  shift, and go to state 134


State 106

   69 and_list: and_list LOGICAL_AND $@9 binary .
   72 binary: binary . RELOP $@10 binary
   74       | binary . EQUOP $@11 binary
   76       | binary . '+' $@12 binary
   78       | binary . '-' $@13 binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 69 (and_list)


State 107

   72 binary: binary . RELOP $@10 binary
   74       | binary . EQUOP $@11 binary
   74       | binary EQUOP $@11 binary .
   76       | binary . '+' $@12 binary
   78       | binary . '-' $@13 binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 74 (binary)


State 108

   72 binary: binary . RELOP $@10 binary
   72       | binary RELOP $@10 binary .
   74       | binary . EQUOP $@11 binary
   76       | binary . '+' $@12 binary
   78       | binary . '-' $@13 binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 72 (binary)


State 109

   72 binary: binary . RELOP $@10 binary
   74       | binary . EQUOP $@11 binary
   76       | binary . '+' $@12 binary
   76       | binary '+' $@12 binary .
   78       | binary . '-' $@13 binary

    $default  reduce using rule 76 (binary)


State 110

   72 binary: binary . RELOP $@10 binary
   74       | binary . EQUOP $@11 binary
   76       | binary . '+' $@12 binary
   78       | binary . '-' $@13 binary
   78       | binary '-' $@13 binary .

    $default  reduce using rule 78 (binary)


State 111

   94 unary: unary '[' expr ']' .

    $default  reduce using rule 94 (unary)


State 112

  101 args: expr .

    $default  reduce using rule 101 (args)


State 113

   98 unary: unary '(' $@14 args . ')'
  100 args: args . ',' expr

    ','  shift, and go to state 135
    ')'  shift, and go to state 136


State 114

   62 expr: unary $@8 '=' expr .

    $default  reduce using rule 62 (expr)


State 115

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 137

    $default  reduce using rule 24 (param_decl)


State 116

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 117

   40 stmt: RETURN . ';'
   42     | RETURN . $@6 expr ';'

    ';'  shift, and go to state 138

    $default  reduce using rule 41 ($@6)

    $@6  go to state 139


State 118

   44 stmt: IF . LABEL '(' expr ')' BRANCH stmt LABEL
   46     | IF . LABEL '(' expr ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL

    $default  reduce using rule 56 (LABEL)

    LABEL  go to state 140


State 119

   47 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 141


State 120

   48 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 142


State 121

   49 stmt: BREAK . ';'

    ';'  shift, and go to state 143


State 122

   50 stmt: CONTINUE . ';'

    ';'  shift, and go to state 144


State 123

   51 stmt: READ_INT . '(' expr ')'

    '('  shift, and go to state 145


State 124

   52 stmt: READ_CHAR . '(' expr ')'

    '('  shift, and go to state 146


State 125

   53 stmt: WRITE_INT . '(' expr ')'

    '('  shift, and go to state 147


State 126

   54 stmt: WRITE_CHAR . '(' expr ')'

    '('  shift, and go to state 148


State 127

   55 stmt: WRITE_STRING . '(' expr ')'

    '('  shift, and go to state 149


State 128

   43 stmt: ';' .

    $default  reduce using rule 43 (stmt)


State 129

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 130

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 131

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 132

   38 stmt: expr . ';'

    ';'  shift, and go to state 150


State 133

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 151
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 134

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 135

  100 args: args ',' . expr

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 152
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 136

   98 unary: unary '(' $@14 args ')' .

    $default  reduce using rule 98 (unary)


State 137

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 153
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 138

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 139

   42 stmt: RETURN $@6 . expr ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 154
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 140

   44 stmt: IF LABEL . '(' expr ')' BRANCH stmt LABEL
   46     | IF LABEL . '(' expr ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL

    '('  shift, and go to state 155


State 141

   47 stmt: WHILE '(' . expr ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 156
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 142

   48 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 59 (expr_e)

    expr_e    go to state 157
    expr      go to state 158
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 143

   49 stmt: BREAK ';' .

    $default  reduce using rule 49 (stmt)


State 144

   50 stmt: CONTINUE ';' .

    $default  reduce using rule 50 (stmt)


State 145

   51 stmt: READ_INT '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 159
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 146

   52 stmt: READ_CHAR '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 160
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 147

   53 stmt: WRITE_INT '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 161
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 148

   54 stmt: WRITE_CHAR '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 162
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 149

   55 stmt: WRITE_STRING '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 163
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 150

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 151

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 164


State 152

  100 args: args ',' expr .

    $default  reduce using rule 100 (args)


State 153

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 165


State 154

   42 stmt: RETURN $@6 expr . ';'

    ';'  shift, and go to state 166


State 155

   44 stmt: IF LABEL '(' . expr ')' BRANCH stmt LABEL
   46     | IF LABEL '(' . expr ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 167
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 156

   47 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 168


State 157

   48 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 169


State 158

   58 expr_e: expr .

    $default  reduce using rule 58 (expr_e)


State 159

   51 stmt: READ_INT '(' expr . ')'

    ')'  shift, and go to state 170


State 160

   52 stmt: READ_CHAR '(' expr . ')'

    ')'  shift, and go to state 171


State 161

   53 stmt: WRITE_INT '(' expr . ')'

    ')'  shift, and go to state 172


State 162

   54 stmt: WRITE_CHAR '(' expr . ')'

    ')'  shift, and go to state 173


State 163

   55 stmt: WRITE_STRING '(' expr . ')'

    ')'  shift, and go to state 174


State 164

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 175


State 165

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 166

   42 stmt: RETURN $@6 expr ';' .

    $default  reduce using rule 42 (stmt)


State 167

   44 stmt: IF LABEL '(' expr . ')' BRANCH stmt LABEL
   46     | IF LABEL '(' expr . ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL

    ')'  shift, and go to state 176


State 168

   47 stmt: WHILE '(' expr ')' . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 117
    IF             shift, and go to state 118
    WHILE          shift, and go to state 119
    FOR            shift, and go to state 120
    BREAK          shift, and go to state 121
    CONTINUE       shift, and go to state 122
    READ_INT       shift, and go to state 123
    READ_CHAR      shift, and go to state 124
    WRITE_INT      shift, and go to state 125
    WRITE_CHAR     shift, and go to state 126
    WRITE_STRING   shift, and go to state 127
    ';'            shift, and go to state 128
    '{'            shift, and go to state 19

    compound_stmt  go to state 130
    stmt           go to state 177
    expr           go to state 132
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 169

   48 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 59 (expr_e)

    expr_e    go to state 178
    expr      go to state 158
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 170

   51 stmt: READ_INT '(' expr ')' .

    $default  reduce using rule 51 (stmt)


State 171

   52 stmt: READ_CHAR '(' expr ')' .

    $default  reduce using rule 52 (stmt)


State 172

   53 stmt: WRITE_INT '(' expr ')' .

    $default  reduce using rule 53 (stmt)


State 173

   54 stmt: WRITE_CHAR '(' expr ')' .

    $default  reduce using rule 54 (stmt)


State 174

   55 stmt: WRITE_STRING '(' expr ')' .

    $default  reduce using rule 55 (stmt)


State 175

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 176

   44 stmt: IF LABEL '(' expr ')' . BRANCH stmt LABEL
   46     | IF LABEL '(' expr ')' . BRANCH stmt ELSE $@7 LABEL stmt LABEL

    $default  reduce using rule 57 (BRANCH)

    BRANCH  go to state 179


State 177

   47 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 47 (stmt)


State 178

   48 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 180


State 179

   44 stmt: IF LABEL '(' expr ')' BRANCH . stmt LABEL
   46     | IF LABEL '(' expr ')' BRANCH . stmt ELSE $@7 LABEL stmt LABEL

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 117
    IF             shift, and go to state 118
    WHILE          shift, and go to state 119
    FOR            shift, and go to state 120
    BREAK          shift, and go to state 121
    CONTINUE       shift, and go to state 122
    READ_INT       shift, and go to state 123
    READ_CHAR      shift, and go to state 124
    WRITE_INT      shift, and go to state 125
    WRITE_CHAR     shift, and go to state 126
    WRITE_STRING   shift, and go to state 127
    ';'            shift, and go to state 128
    '{'            shift, and go to state 19

    compound_stmt  go to state 130
    stmt           go to state 181
    expr           go to state 132
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 180

   48 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 59 (expr_e)

    expr_e    go to state 182
    expr      go to state 158
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 181

   44 stmt: IF LABEL '(' expr ')' BRANCH stmt . LABEL
   46     | IF LABEL '(' expr ')' BRANCH stmt . ELSE $@7 LABEL stmt LABEL

    ELSE  shift, and go to state 183

    ELSE      [reduce using rule 56 (LABEL)]
    $default  reduce using rule 56 (LABEL)

    LABEL  go to state 184


State 182

   48 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 185


State 183

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE . $@7 LABEL stmt LABEL

    $default  reduce using rule 45 ($@7)

    $@7  go to state 186


State 184

   44 stmt: IF LABEL '(' expr ')' BRANCH stmt LABEL .

    $default  reduce using rule 44 (stmt)


State 185

   48 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 117
    IF             shift, and go to state 118
    WHILE          shift, and go to state 119
    FOR            shift, and go to state 120
    BREAK          shift, and go to state 121
    CONTINUE       shift, and go to state 122
    READ_INT       shift, and go to state 123
    READ_CHAR      shift, and go to state 124
    WRITE_INT      shift, and go to state 125
    WRITE_CHAR     shift, and go to state 126
    WRITE_STRING   shift, and go to state 127
    ';'            shift, and go to state 128
    '{'            shift, and go to state 19

    compound_stmt  go to state 130
    stmt           go to state 187
    expr           go to state 132
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 186

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE $@7 . LABEL stmt LABEL

    $default  reduce using rule 56 (LABEL)

    LABEL  go to state 188


State 187

   48 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 48 (stmt)


State 188

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE $@7 LABEL . stmt LABEL

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 117
    IF             shift, and go to state 118
    WHILE          shift, and go to state 119
    FOR            shift, and go to state 120
    BREAK          shift, and go to state 121
    CONTINUE       shift, and go to state 122
    READ_INT       shift, and go to state 123
    READ_CHAR      shift, and go to state 124
    WRITE_INT      shift, and go to state 125
    WRITE_CHAR     shift, and go to state 126
    WRITE_STRING   shift, and go to state 127
    ';'            shift, and go to state 128
    '{'            shift, and go to state 19

    compound_stmt  go to state 130
    stmt           go to state 189
    expr           go to state 132
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 189

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE $@7 LABEL stmt . LABEL

    $default  reduce using rule 56 (LABEL)

    LABEL  go to state 190


State 190

   46 stmt: IF LABEL '(' expr ')' BRANCH stmt ELSE $@7 LABEL stmt LABEL .

    $default  reduce using rule 46 (stmt)
