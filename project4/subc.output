State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 @2: %empty

   14 struct_specifier: STRUCT ID '{' @2 def_list '}'
   15                 | STRUCT ID

   16 func_decl: type_specifier pointers ID '(' ')'
   17          | type_specifier pointers ID '(' VOID ')'

   18 @3: %empty

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 @4: %empty

   33 $@5: %empty

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'
   41     | RETURN expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'
   49     | READ_INT '(' expr ')'
   50     | READ_CHAR '(' expr ')'
   51     | WRITE_INT '(' expr ')'
   52     | WRITE_CHAR '(' expr ')'
   53     | WRITE_STRING '(' expr ')'

   54 expr_e: expr
   55       | %empty

   56 const_expr: expr

   57 $@6: %empty

   58 expr: unary $@6 '=' expr
   59     | or_expr

   60 or_expr: or_list

   61 or_list: or_list LOGICAL_OR and_expr
   62        | and_expr

   63 and_expr: and_list

   64 and_list: and_list LOGICAL_AND binary
   65         | binary

   66 binary: binary RELOP binary
   67       | binary EQUOP binary
   68       | binary '+' binary

   69 $@7: %empty

   70 binary: binary '-' $@7 binary
   71       | unary

   72 unary: '(' expr ')'
   73      | '(' unary ')'
   74      | INTEGER_CONST
   75      | CHAR_CONST
   76      | STRING
   77      | ID
   78      | '-' unary
   79      | '!' unary
   80      | unary INCOP
   81      | unary DECOP
   82      | INCOP unary
   83      | DECOP unary
   84      | '&' unary
   85      | '*' unary
   86      | unary '[' expr ']'
   87      | unary '.' ID
   88      | unary STRUCTOP ID
   89      | unary '(' args ')'
   90      | unary '(' ')'

   91 args: expr
   92     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'!' (33) 79
'&' (38) 84
'(' (40) 16 17 19 43 44 45 46 49 50 51 52 53 72 73 89 90
')' (41) 16 17 19 43 44 45 46 49 50 51 52 53 72 73 89 90
'*' (42) 20 85
'+' (43) 68
',' (44) 23 92
'-' (45) 70 78
'.' (46) 87
';' (59) 4 5 6 7 28 29 30 31 38 40 41 42 46 47 48
'=' (61) 58
'[' (91) 5 25 29 86
']' (93) 5 25 29 86
'{' (123) 14 34
'}' (125) 14 34
error (256)
ID (258) 4 5 14 15 16 17 19 24 25 28 29 77 87 88
TYPE (259) 10
VOID (260) 11 17
ELSE (261) 44
LOGICAL_OR (262) 61
LOGICAL_AND (263) 64
EQUOP (264) 67
RELOP (265) 66
INCOP (266) 80 82
DECOP (267) 81 83
STRUCTOP (268) 88
STRUCT (269) 14 15
CHAR_CONST (270) 75
STRING (271) 76
INTEGER_CONST (272) 74
RETURN (273) 40 41
IF (274) 43 44
WHILE (275) 45
FOR (276) 46
BREAK (277) 47
CONTINUE (278) 48
READ_INT (279) 49
READ_CHAR (280) 50
WRITE_INT (281) 51
WRITE_CHAR (282) 52
WRITE_STRING (283) 53


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
ext_def_list (46)
    on left: 2 3, on right: 1 2
ext_def (47)
    on left: 4 5 6 7 9, on right: 2
$@1 (48)
    on left: 8, on right: 9
type_specifier (49)
    on left: 10 11 12, on right: 4 5 7 16 17 19 24 25 28 29 30
struct_specifier (50)
    on left: 14 15, on right: 12
@2 (51)
    on left: 13, on right: 14
func_decl (52)
    on left: 16 17 19, on right: 6 9 31
@3 (53)
    on left: 18, on right: 19
pointers (54)
    on left: 20 21, on right: 4 5 16 17 19 24 25 28 29
param_list (55)
    on left: 22 23, on right: 19 23
param_decl (56)
    on left: 24 25, on right: 22 23
def_list (57)
    on left: 26 27, on right: 14 26 35
def (58)
    on left: 28 29 30 31, on right: 26
compound_stmt (59)
    on left: 34, on right: 9 39
@4 (60)
    on left: 32, on right: 34
$@5 (61)
    on left: 33, on right: 34
local_defs (62)
    on left: 35, on right: 34
stmt_list (63)
    on left: 36 37, on right: 34 36
stmt (64)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53, on right:
    36 43 44 45 46
expr_e (65)
    on left: 54 55, on right: 46
const_expr (66)
    on left: 56, on right: 5 25 29
expr (67)
    on left: 58 59, on right: 38 41 43 44 45 49 50 51 52 53 54 56 58
    72 86 91 92
$@6 (68)
    on left: 57, on right: 58
or_expr (69)
    on left: 60, on right: 59
or_list (70)
    on left: 61 62, on right: 60 61
and_expr (71)
    on left: 63, on right: 61 62
and_list (72)
    on left: 64 65, on right: 63 64
binary (73)
    on left: 66 67 68 70 71, on right: 64 65 66 67 68 70
$@7 (74)
    on left: 69, on right: 70
unary (75)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90, on right: 58 71 73 78 79 80 81 82 83 84 85 86 87 88 89 90
args (76)
    on left: 91 92, on right: 89 92


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   14 struct_specifier: STRUCT . ID '{' @2 def_list '}'
   15                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   14 struct_specifier: STRUCT ID . '{' @2 def_list '}'
   15                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 15 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   14 struct_specifier: STRUCT ID '{' . @2 def_list '}'

    $default  reduce using rule 13 (@2)

    @2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 compound_stmt: '{' . @4 local_defs $@5 stmt_list '}'

    $default  reduce using rule 32 (@4)

    @4  go to state 25


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   14 struct_specifier: STRUCT ID '{' @2 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 26


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 38
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 23

   16 func_decl: type_specifier pointers ID '(' . ')'
   17          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . @3 param_list ')'

    VOID  shift, and go to state 46
    ')'   shift, and go to state 47

    VOID      [reduce using rule 18 (@3)]
    $default  reduce using rule 18 (@3)

    @3  go to state 48


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   34 compound_stmt: '{' @4 . local_defs $@5 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 49
    local_defs  go to state 50


State 26

   14 struct_specifier: STRUCT ID '{' @2 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 51

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 27

   77 unary: ID .

    $default  reduce using rule 77 (unary)


State 28

   84 unary: '&' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 55


State 29

   78 unary: '-' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 56


State 30

   85 unary: '*' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 57


State 31

   79 unary: '!' . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 58


State 32

   82 unary: INCOP . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 59


State 33

   83 unary: DECOP . unary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    unary  go to state 60


State 34

   72 unary: '(' . expr ')'
   73      | '(' . unary ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 61
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 62


State 35

   75 unary: CHAR_CONST .

    $default  reduce using rule 75 (unary)


State 36

   76 unary: STRING .

    $default  reduce using rule 76 (unary)


State 37

   74 unary: INTEGER_CONST .

    $default  reduce using rule 74 (unary)


State 38

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 39

   56 const_expr: expr .

    $default  reduce using rule 56 (const_expr)


State 40

   59 expr: or_expr .

    $default  reduce using rule 59 (expr)


State 41

   60 or_expr: or_list .
   61 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 60 (or_expr)


State 42

   62 or_list: and_expr .

    $default  reduce using rule 62 (or_list)


State 43

   63 and_expr: and_list .
   64 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 63 (and_expr)


State 44

   65 and_list: binary .
   66 binary: binary . RELOP binary
   67       | binary . EQUOP binary
   68       | binary . '+' binary
   70       | binary . '-' $@7 binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 65 (and_list)


State 45

   58 expr: unary . $@6 '=' expr
   71 binary: unary .
   80 unary: unary . INCOP
   81      | unary . DECOP
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 57 ($@6)
    $default  reduce using rule 71 (binary)

    $@6  go to state 76


State 46

   17 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 77


State 47

   16 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 16 (func_decl)


State 48

   19 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_list        go to state 79
    param_decl        go to state 80


State 49

   26 def_list: def_list . def
   35 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 52
    struct_specifier  go to state 9
    func_decl         go to state 53
    def               go to state 54


State 50

   34 compound_stmt: '{' @4 local_defs . $@5 stmt_list '}'

    $default  reduce using rule 33 ($@5)

    $@5  go to state 81


State 51

   14 struct_specifier: STRUCT ID '{' @2 def_list '}' .

    $default  reduce using rule 14 (struct_specifier)


State 52

   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 82

    $default  reduce using rule 21 (pointers)

    pointers  go to state 83


State 53

   31 def: func_decl . ';'

    ';'  shift, and go to state 84


State 54

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 55

   80 unary: unary . INCOP
   81      | unary . DECOP
   84      | '&' unary .
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 84 (unary)


State 56

   78 unary: '-' unary .
   80      | unary . INCOP
   81      | unary . DECOP
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 78 (unary)


State 57

   80 unary: unary . INCOP
   81      | unary . DECOP
   85      | '*' unary .
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 85 (unary)


State 58

   79 unary: '!' unary .
   80      | unary . INCOP
   81      | unary . DECOP
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 79 (unary)


State 59

   80 unary: unary . INCOP
   81      | unary . DECOP
   82      | INCOP unary .
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 82 (unary)


State 60

   80 unary: unary . INCOP
   81      | unary . DECOP
   83      | DECOP unary .
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 83 (unary)


State 61

   72 unary: '(' expr . ')'

    ')'  shift, and go to state 85


State 62

   58 expr: unary . $@6 '=' expr
   71 binary: unary .
   73 unary: '(' unary . ')'
   80      | unary . INCOP
   81      | unary . DECOP
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 86
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 57 ($@6)
    $default  reduce using rule 71 (binary)

    $@6  go to state 76


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 87


State 64

   61 or_list: or_list LOGICAL_OR . and_expr

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    and_expr  go to state 88
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 89


State 65

   64 and_list: and_list LOGICAL_AND . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 90
    unary   go to state 89


State 66

   67 binary: binary EQUOP . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 91
    unary   go to state 89


State 67

   66 binary: binary RELOP . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 92
    unary   go to state 89


State 68

   68 binary: binary '+' . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 93
    unary   go to state 89


State 69

   70 binary: binary '-' . $@7 binary

    $default  reduce using rule 69 ($@7)

    $@7  go to state 94


State 70

   80 unary: unary INCOP .

    $default  reduce using rule 80 (unary)


State 71

   81 unary: unary DECOP .

    $default  reduce using rule 81 (unary)


State 72

   86 unary: unary '[' . expr ']'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 95
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 73

   89 unary: unary '(' . args ')'
   90      | unary '(' . ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ')'            shift, and go to state 96
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 97
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45
    args      go to state 98


State 74

   87 unary: unary '.' . ID

    ID  shift, and go to state 99


State 75

   88 unary: unary STRUCTOP . ID

    ID  shift, and go to state 100


State 76

   58 expr: unary $@6 . '=' expr

    '='  shift, and go to state 101


State 77

   17 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 17 (func_decl)


State 78

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 102


State 79

   19 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 103
    ')'  shift, and go to state 104


State 80

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 81

   34 compound_stmt: '{' @4 local_defs $@5 . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 105


State 82

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 83

   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 106


State 84

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 85

   72 unary: '(' expr ')' .

    $default  reduce using rule 72 (unary)


State 86

   73 unary: '(' unary ')' .

    $default  reduce using rule 73 (unary)


State 87

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 88

   61 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 61 (or_list)


State 89

   71 binary: unary .
   80 unary: unary . INCOP
   81      | unary . DECOP
   86      | unary . '[' expr ']'
   87      | unary . '.' ID
   88      | unary . STRUCTOP ID
   89      | unary . '(' args ')'
   90      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 71 (binary)


State 90

   64 and_list: and_list LOGICAL_AND binary .
   66 binary: binary . RELOP binary
   67       | binary . EQUOP binary
   68       | binary . '+' binary
   70       | binary . '-' $@7 binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 64 (and_list)


State 91

   66 binary: binary . RELOP binary
   67       | binary . EQUOP binary
   67       | binary EQUOP binary .
   68       | binary . '+' binary
   70       | binary . '-' $@7 binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 67 (binary)


State 92

   66 binary: binary . RELOP binary
   66       | binary RELOP binary .
   67       | binary . EQUOP binary
   68       | binary . '+' binary
   70       | binary . '-' $@7 binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 66 (binary)


State 93

   66 binary: binary . RELOP binary
   67       | binary . EQUOP binary
   68       | binary . '+' binary
   68       | binary '+' binary .
   70       | binary . '-' $@7 binary

    $default  reduce using rule 68 (binary)


State 94

   70 binary: binary '-' $@7 . binary

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    binary  go to state 107
    unary   go to state 89


State 95

   86 unary: unary '[' expr . ']'

    ']'  shift, and go to state 108


State 96

   90 unary: unary '(' ')' .

    $default  reduce using rule 90 (unary)


State 97

   91 args: expr .
   92     | expr . ',' args

    ','  shift, and go to state 109

    $default  reduce using rule 91 (args)


State 98

   89 unary: unary '(' args . ')'

    ')'  shift, and go to state 110


State 99

   87 unary: unary '.' ID .

    $default  reduce using rule 87 (unary)


State 100

   88 unary: unary STRUCTOP ID .

    $default  reduce using rule 88 (unary)


State 101

   58 expr: unary $@6 '=' . expr

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 111
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 102

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 112


State 103

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_decl        go to state 113


State 104

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 105

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 114
    IF             shift, and go to state 115
    WHILE          shift, and go to state 116
    FOR            shift, and go to state 117
    BREAK          shift, and go to state 118
    CONTINUE       shift, and go to state 119
    READ_INT       shift, and go to state 120
    READ_CHAR      shift, and go to state 121
    WRITE_INT      shift, and go to state 122
    WRITE_CHAR     shift, and go to state 123
    WRITE_STRING   shift, and go to state 124
    ';'            shift, and go to state 125
    '{'            shift, and go to state 19
    '}'            shift, and go to state 126

    compound_stmt  go to state 127
    stmt           go to state 128
    expr           go to state 129
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 106

   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 130
    '('  shift, and go to state 23
    ';'  shift, and go to state 131


State 107

   66 binary: binary . RELOP binary
   67       | binary . EQUOP binary
   68       | binary . '+' binary
   70       | binary . '-' $@7 binary
   70       | binary '-' $@7 binary .

    $default  reduce using rule 70 (binary)


State 108

   86 unary: unary '[' expr ']' .

    $default  reduce using rule 86 (unary)


State 109

   92 args: expr ',' . args

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 97
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45
    args      go to state 132


State 110

   89 unary: unary '(' args ')' .

    $default  reduce using rule 89 (unary)


State 111

   58 expr: unary $@6 '=' expr .

    $default  reduce using rule 58 (expr)


State 112

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 133

    $default  reduce using rule 24 (param_decl)


State 113

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 114

   40 stmt: RETURN . ';'
   41     | RETURN . expr ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    ';'            shift, and go to state 134

    expr      go to state 135
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 115

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 136


State 116

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 137


State 117

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 138


State 118

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 139


State 119

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 140


State 120

   49 stmt: READ_INT . '(' expr ')'

    '('  shift, and go to state 141


State 121

   50 stmt: READ_CHAR . '(' expr ')'

    '('  shift, and go to state 142


State 122

   51 stmt: WRITE_INT . '(' expr ')'

    '('  shift, and go to state 143


State 123

   52 stmt: WRITE_CHAR . '(' expr ')'

    '('  shift, and go to state 144


State 124

   53 stmt: WRITE_STRING . '(' expr ')'

    '('  shift, and go to state 145


State 125

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 126

   34 compound_stmt: '{' @4 local_defs $@5 stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 127

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 128

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 129

   38 stmt: expr . ';'

    ';'  shift, and go to state 146


State 130

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 147
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 131

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 132

   92 args: expr ',' args .

    $default  reduce using rule 92 (args)


State 133

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    const_expr  go to state 148
    expr        go to state 39
    or_expr     go to state 40
    or_list     go to state 41
    and_expr    go to state 42
    and_list    go to state 43
    binary      go to state 44
    unary       go to state 45


State 134

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 135

   41 stmt: RETURN expr . ';'

    ';'  shift, and go to state 149


State 136

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 150
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 137

   45 stmt: WHILE '(' . expr ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 151
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 138

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 55 (expr_e)

    expr_e    go to state 152
    expr      go to state 153
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 139

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 140

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 141

   49 stmt: READ_INT '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 154
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 142

   50 stmt: READ_CHAR '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 155
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 143

   51 stmt: WRITE_INT '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 156
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 144

   52 stmt: WRITE_CHAR '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 157
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 145

   53 stmt: WRITE_STRING '(' . expr ')'

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    expr      go to state 158
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 146

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 147

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 159


State 148

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 160


State 149

   41 stmt: RETURN expr ';' .

    $default  reduce using rule 41 (stmt)


State 150

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 161


State 151

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 162


State 152

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 163


State 153

   54 expr_e: expr .

    $default  reduce using rule 54 (expr_e)


State 154

   49 stmt: READ_INT '(' expr . ')'

    ')'  shift, and go to state 164


State 155

   50 stmt: READ_CHAR '(' expr . ')'

    ')'  shift, and go to state 165


State 156

   51 stmt: WRITE_INT '(' expr . ')'

    ')'  shift, and go to state 166


State 157

   52 stmt: WRITE_CHAR '(' expr . ')'

    ')'  shift, and go to state 167


State 158

   53 stmt: WRITE_STRING '(' expr . ')'

    ')'  shift, and go to state 168


State 159

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 169


State 160

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 161

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 114
    IF             shift, and go to state 115
    WHILE          shift, and go to state 116
    FOR            shift, and go to state 117
    BREAK          shift, and go to state 118
    CONTINUE       shift, and go to state 119
    READ_INT       shift, and go to state 120
    READ_CHAR      shift, and go to state 121
    WRITE_INT      shift, and go to state 122
    WRITE_CHAR     shift, and go to state 123
    WRITE_STRING   shift, and go to state 124
    ';'            shift, and go to state 125
    '{'            shift, and go to state 19

    compound_stmt  go to state 127
    stmt           go to state 170
    expr           go to state 129
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 162

   45 stmt: WHILE '(' expr ')' . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 114
    IF             shift, and go to state 115
    WHILE          shift, and go to state 116
    FOR            shift, and go to state 117
    BREAK          shift, and go to state 118
    CONTINUE       shift, and go to state 119
    READ_INT       shift, and go to state 120
    READ_CHAR      shift, and go to state 121
    WRITE_INT      shift, and go to state 122
    WRITE_CHAR     shift, and go to state 123
    WRITE_STRING   shift, and go to state 124
    ';'            shift, and go to state 125
    '{'            shift, and go to state 19

    compound_stmt  go to state 127
    stmt           go to state 171
    expr           go to state 129
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 163

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 55 (expr_e)

    expr_e    go to state 172
    expr      go to state 153
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 164

   49 stmt: READ_INT '(' expr ')' .

    $default  reduce using rule 49 (stmt)


State 165

   50 stmt: READ_CHAR '(' expr ')' .

    $default  reduce using rule 50 (stmt)


State 166

   51 stmt: WRITE_INT '(' expr ')' .

    $default  reduce using rule 51 (stmt)


State 167

   52 stmt: WRITE_CHAR '(' expr ')' .

    $default  reduce using rule 52 (stmt)


State 168

   53 stmt: WRITE_STRING '(' expr ')' .

    $default  reduce using rule 53 (stmt)


State 169

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 170

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 173

    $default  reduce using rule 43 (stmt)


State 171

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 172

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 174


State 173

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 114
    IF             shift, and go to state 115
    WHILE          shift, and go to state 116
    FOR            shift, and go to state 117
    BREAK          shift, and go to state 118
    CONTINUE       shift, and go to state 119
    READ_INT       shift, and go to state 120
    READ_CHAR      shift, and go to state 121
    WRITE_INT      shift, and go to state 122
    WRITE_CHAR     shift, and go to state 123
    WRITE_STRING   shift, and go to state 124
    ';'            shift, and go to state 125
    '{'            shift, and go to state 19

    compound_stmt  go to state 127
    stmt           go to state 175
    expr           go to state 129
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 174

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37

    $default  reduce using rule 55 (expr_e)

    expr_e    go to state 176
    expr      go to state 153
    or_expr   go to state 40
    or_list   go to state 41
    and_expr  go to state 42
    and_list  go to state 43
    binary    go to state 44
    unary     go to state 45


State 175

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 176

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 177


State 177

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    ID             shift, and go to state 27
    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    CHAR_CONST     shift, and go to state 35
    STRING         shift, and go to state 36
    INTEGER_CONST  shift, and go to state 37
    RETURN         shift, and go to state 114
    IF             shift, and go to state 115
    WHILE          shift, and go to state 116
    FOR            shift, and go to state 117
    BREAK          shift, and go to state 118
    CONTINUE       shift, and go to state 119
    READ_INT       shift, and go to state 120
    READ_CHAR      shift, and go to state 121
    WRITE_INT      shift, and go to state 122
    WRITE_CHAR     shift, and go to state 123
    WRITE_STRING   shift, and go to state 124
    ';'            shift, and go to state 125
    '{'            shift, and go to state 19

    compound_stmt  go to state 127
    stmt           go to state 178
    expr           go to state 129
    or_expr        go to state 40
    or_list        go to state 41
    and_expr       go to state 42
    and_list       go to state 43
    binary         go to state 44
    unary          go to state 45


State 178

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
