State 23 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@2: %empty

   14 @3: %empty

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}'
   16                 | STRUCT ID

   17 @4: %empty

   18 func_decl: type_specifier pointers ID '(' @4 ')'

   19 @5: %empty

   20 func_decl: type_specifier pointers ID '(' @5 VOID ')'

   21 @6: %empty

   22 func_decl: type_specifier pointers ID '(' @6 param_list ')'

   23 pointers: '*'
   24         | %empty

   25 param_list: param_decl
   26           | param_list ',' param_decl

   27 param_decl: type_specifier pointers ID
   28           | type_specifier pointers ID '[' const_expr ']'

   29 def_list: def_list def
   30         | %empty

   31 def: type_specifier pointers ID ';'
   32    | type_specifier pointers ID '[' const_expr ']' ';'
   33    | type_specifier ';'
   34    | func_decl ';'

   35 compound_stmt: '{' local_defs stmt_list '}'

   36 local_defs: def_list

   37 stmt_list: stmt_list stmt
   38          | %empty

   39 stmt: expr ';'
   40     | compound_stmt
   41     | RETURN ';'
   42     | RETURN expr ';'
   43     | ';'
   44     | IF '(' expr ')' stmt
   45     | IF '(' expr ')' stmt ELSE stmt
   46     | WHILE '(' expr ')' stmt
   47     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   48     | BREAK ';'
   49     | CONTINUE ';'

   50 expr_e: expr
   51       | %empty

   52 const_expr: expr

   53 expr: unary '=' expr
   54     | or_expr

   55 or_expr: or_list

   56 or_list: or_list LOGICAL_OR and_expr
   57        | and_expr

   58 and_expr: and_list

   59 and_list: and_list LOGICAL_AND binary
   60         | binary

   61 binary: binary RELOP binary
   62       | binary EQUOP binary
   63       | binary '+' binary
   64       | binary '-' binary
   65       | unary

   66 unary: '(' expr ')'
   67      | '(' unary ')'
   68      | INTEGER_CONST
   69      | CHAR_CONST
   70      | STRING
   71      | ID
   72      | '-' unary
   73      | '!' unary
   74      | unary INCOP
   75      | unary DECOP
   76      | INCOP unary
   77      | DECOP unary
   78      | '&' unary
   79      | '*' unary
   80      | unary '[' expr ']'
   81      | unary '.' ID
   82      | unary STRUCTOP ID
   83      | unary '(' args ')'
   84      | unary '(' ')'

   85 args: expr
   86     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'&' (38) 78
'(' (40) 18 20 22 44 45 46 47 66 67 83 84
')' (41) 18 20 22 44 45 46 47 66 67 83 84
'*' (42) 23 79
'+' (43) 63
',' (44) 26 86
'-' (45) 64 72
'.' (46) 81
';' (59) 4 5 6 7 31 32 33 34 39 41 42 43 47 48 49
'=' (61) 53
'[' (91) 5 28 32 80
']' (93) 5 28 32 80
'{' (123) 15 35
'}' (125) 15 35
error (256)
ID (258) 4 5 15 16 18 20 22 27 28 31 32 71 81 82
TYPE (259) 10
VOID (260) 11 20
ELSE (261) 45
LOGICAL_OR (262) 56
LOGICAL_AND (263) 59
EQUOP (264) 62
RELOP (265) 61
INCOP (266) 74 76
DECOP (267) 75 77
STRUCTOP (268) 82
STRUCT (269) 15 16
CHAR_CONST (270) 69
STRING (271) 70
INTEGER_CONST (272) 68
RETURN (273) 41 42
IF (274) 44 45
WHILE (275) 46
FOR (276) 47
BREAK (277) 48
CONTINUE (278) 49


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
ext_def_list (41)
    on left: 2 3, on right: 1 2
ext_def (42)
    on left: 4 5 6 7 9, on right: 2
$@1 (43)
    on left: 8, on right: 9
type_specifier (44)
    on left: 10 11 12, on right: 4 5 7 18 20 22 27 28 31 32 33
struct_specifier (45)
    on left: 15 16, on right: 12
$@2 (46)
    on left: 13, on right: 15
@3 (47)
    on left: 14, on right: 15
func_decl (48)
    on left: 18 20 22, on right: 6 9 34
@4 (49)
    on left: 17, on right: 18
@5 (50)
    on left: 19, on right: 20
@6 (51)
    on left: 21, on right: 22
pointers (52)
    on left: 23 24, on right: 4 5 18 20 22 27 28 31 32
param_list (53)
    on left: 25 26, on right: 22 26
param_decl (54)
    on left: 27 28, on right: 25 26
def_list (55)
    on left: 29 30, on right: 15 29 36
def (56)
    on left: 31 32 33 34, on right: 29
compound_stmt (57)
    on left: 35, on right: 9 40
local_defs (58)
    on left: 36, on right: 35
stmt_list (59)
    on left: 37 38, on right: 35 37
stmt (60)
    on left: 39 40 41 42 43 44 45 46 47 48 49, on right: 37 44 45 46
    47
expr_e (61)
    on left: 50 51, on right: 47
const_expr (62)
    on left: 52, on right: 5 28 32
expr (63)
    on left: 53 54, on right: 39 42 44 45 46 50 52 53 66 80 85 86
or_expr (64)
    on left: 55, on right: 54
or_list (65)
    on left: 56 57, on right: 55 56
and_expr (66)
    on left: 58, on right: 56 57
and_list (67)
    on left: 59 60, on right: 58 59
binary (68)
    on left: 61 62 63 64 65, on right: 59 60 61 62 63 64
unary (69)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84, on right: 53 65 67 72 73 74 75 76 77 78 79 80 81 82 83 84
args (70)
    on left: 85 86, on right: 83 86


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@2 def_list @3 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   18 func_decl: type_specifier . pointers ID '(' @4 ')'
   20          | type_specifier . pointers ID '(' @5 VOID ')'
   22          | type_specifier . pointers ID '(' @6 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 24 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   15 struct_specifier: STRUCT ID . '{' $@2 def_list @3 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 16 (struct_specifier)


State 12

   23 pointers: '*' .

    $default  reduce using rule 23 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   18 func_decl: type_specifier pointers . ID '(' @4 ')'
   20          | type_specifier pointers . ID '(' @5 VOID ')'
   22          | type_specifier pointers . ID '(' @6 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . compound_stmt

    '{'  shift, and go to state 19

    compound_stmt  go to state 20


State 17

   15 struct_specifier: STRUCT ID '{' . $@2 def_list @3 '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   18 func_decl: type_specifier pointers ID . '(' @4 ')'
   20          | type_specifier pointers ID . '(' @5 VOID ')'
   22          | type_specifier pointers ID . '(' @6 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   35 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 30 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 20

    9 ext_def: func_decl $@1 compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   15 struct_specifier: STRUCT ID '{' $@2 . def_list @3 '}'

    $default  reduce using rule 30 (def_list)

    def_list  go to state 27


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   18 func_decl: type_specifier pointers ID '(' . @4 ')'
   20          | type_specifier pointers ID '(' . @5 VOID ')'
   22          | type_specifier pointers ID '(' . @6 param_list ')'

    VOID      reduce using rule 19 (@5)
    VOID      [reduce using rule 21 (@6)]
    ')'       reduce using rule 17 (@4)
    $default  reduce using rule 21 (@6)

    @4  go to state 47
    @5  go to state 48
    @6  go to state 49


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   29 def_list: def_list . def
   36 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 36 (local_defs)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 26

   35 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 38 (stmt_list)

    stmt_list  go to state 53


State 27

   15 struct_specifier: STRUCT ID '{' $@2 def_list . @3 '}'
   29 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 14 (@3)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    @3                go to state 54
    func_decl         go to state 51
    def               go to state 52


State 28

   71 unary: ID .

    $default  reduce using rule 71 (unary)


State 29

   78 unary: '&' . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 55


State 30

   72 unary: '-' . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 56


State 31

   79 unary: '*' . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 57


State 32

   73 unary: '!' . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 58


State 33

   76 unary: INCOP . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 59


State 34

   77 unary: DECOP . unary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 60


State 35

   66 unary: '(' . expr ')'
   67      | '(' . unary ')'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 61
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 62


State 36

   69 unary: CHAR_CONST .

    $default  reduce using rule 69 (unary)


State 37

   70 unary: STRING .

    $default  reduce using rule 70 (unary)


State 38

   68 unary: INTEGER_CONST .

    $default  reduce using rule 68 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 40

   52 const_expr: expr .

    $default  reduce using rule 52 (const_expr)


State 41

   54 expr: or_expr .

    $default  reduce using rule 54 (expr)


State 42

   55 or_expr: or_list .
   56 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 55 (or_expr)


State 43

   57 or_list: and_expr .

    $default  reduce using rule 57 (or_list)


State 44

   58 and_expr: and_list .
   59 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 58 (and_expr)


State 45

   60 and_list: binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 60 (and_list)


State 46

   53 expr: unary . '=' expr
   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 65 (binary)


State 47

   18 func_decl: type_specifier pointers ID '(' @4 . ')'

    ')'  shift, and go to state 77


State 48

   20 func_decl: type_specifier pointers ID '(' @5 . VOID ')'

    VOID  shift, and go to state 78


State 49

   22 func_decl: type_specifier pointers ID '(' @6 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 79
    struct_specifier  go to state 9
    param_list        go to state 80
    param_decl        go to state 81


State 50

   18 func_decl: type_specifier . pointers ID '(' @4 ')'
   20          | type_specifier . pointers ID '(' @5 VOID ')'
   22          | type_specifier . pointers ID '(' @6 param_list ')'
   31 def: type_specifier . pointers ID ';'
   32    | type_specifier . pointers ID '[' const_expr ']' ';'
   33    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 82

    $default  reduce using rule 24 (pointers)

    pointers  go to state 83


State 51

   34 def: func_decl . ';'

    ';'  shift, and go to state 84


State 52

   29 def_list: def_list def .

    $default  reduce using rule 29 (def_list)


State 53

   35 compound_stmt: '{' local_defs stmt_list . '}'
   37 stmt_list: stmt_list . stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    ';'            shift, and go to state 91
    '{'            shift, and go to state 19
    '}'            shift, and go to state 92

    compound_stmt  go to state 93
    stmt           go to state 94
    expr           go to state 95
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 54

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 . '}'

    '}'  shift, and go to state 96


State 55

   74 unary: unary . INCOP
   75      | unary . DECOP
   78      | '&' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 78 (unary)


State 56

   72 unary: '-' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 72 (unary)


State 57

   74 unary: unary . INCOP
   75      | unary . DECOP
   79      | '*' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 79 (unary)


State 58

   73 unary: '!' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 73 (unary)


State 59

   74 unary: unary . INCOP
   75      | unary . DECOP
   76      | INCOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 76 (unary)


State 60

   74 unary: unary . INCOP
   75      | unary . DECOP
   77      | DECOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 77 (unary)


State 61

   66 unary: '(' expr . ')'

    ')'  shift, and go to state 97


State 62

   53 expr: unary . '=' expr
   65 binary: unary .
   67 unary: '(' unary . ')'
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    ')'       shift, and go to state 98
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 65 (binary)


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 99


State 64

   56 or_list: or_list LOGICAL_OR . and_expr

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    and_expr  go to state 100
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 101


State 65

   59 and_list: and_list LOGICAL_AND . binary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 102
    unary   go to state 101


State 66

   62 binary: binary EQUOP . binary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 103
    unary   go to state 101


State 67

   61 binary: binary RELOP . binary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 104
    unary   go to state 101


State 68

   63 binary: binary '+' . binary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 105
    unary   go to state 101


State 69

   64 binary: binary '-' . binary

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 106
    unary   go to state 101


State 70

   53 expr: unary '=' . expr

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 107
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 71

   74 unary: unary INCOP .

    $default  reduce using rule 74 (unary)


State 72

   75 unary: unary DECOP .

    $default  reduce using rule 75 (unary)


State 73

   80 unary: unary '[' . expr ']'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 108
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 74

   83 unary: unary '(' . args ')'
   84      | unary '(' . ')'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ')'            shift, and go to state 109
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 110
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 111


State 75

   81 unary: unary '.' . ID

    ID  shift, and go to state 112


State 76

   82 unary: unary STRUCTOP . ID

    ID  shift, and go to state 113


State 77

   18 func_decl: type_specifier pointers ID '(' @4 ')' .

    $default  reduce using rule 18 (func_decl)


State 78

   20 func_decl: type_specifier pointers ID '(' @5 VOID . ')'

    ')'  shift, and go to state 114


State 79

   27 param_decl: type_specifier . pointers ID
   28           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 24 (pointers)

    pointers  go to state 115


State 80

   22 func_decl: type_specifier pointers ID '(' @6 param_list . ')'
   26 param_list: param_list . ',' param_decl

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


State 81

   25 param_list: param_decl .

    $default  reduce using rule 25 (param_list)


State 82

   33 def: type_specifier ';' .

    $default  reduce using rule 33 (def)


State 83

   18 func_decl: type_specifier pointers . ID '(' @4 ')'
   20          | type_specifier pointers . ID '(' @5 VOID ')'
   22          | type_specifier pointers . ID '(' @6 param_list ')'
   31 def: type_specifier pointers . ID ';'
   32    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 118


State 84

   34 def: func_decl ';' .

    $default  reduce using rule 34 (def)


State 85

   41 stmt: RETURN . ';'
   42     | RETURN . expr ';'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 119

    expr      go to state 120
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 86

   44 stmt: IF . '(' expr ')' stmt
   45     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 121


State 87

   46 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 122


State 88

   47 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 123


State 89

   48 stmt: BREAK . ';'

    ';'  shift, and go to state 124


State 90

   49 stmt: CONTINUE . ';'

    ';'  shift, and go to state 125


State 91

   43 stmt: ';' .

    $default  reduce using rule 43 (stmt)


State 92

   35 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 35 (compound_stmt)


State 93

   40 stmt: compound_stmt .

    $default  reduce using rule 40 (stmt)


State 94

   37 stmt_list: stmt_list stmt .

    $default  reduce using rule 37 (stmt_list)


State 95

   39 stmt: expr . ';'

    ';'  shift, and go to state 126


State 96

   15 struct_specifier: STRUCT ID '{' $@2 def_list @3 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 97

   66 unary: '(' expr ')' .

    $default  reduce using rule 66 (unary)


State 98

   67 unary: '(' unary ')' .

    $default  reduce using rule 67 (unary)


State 99

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 100

   56 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 56 (or_list)


State 101

   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 65 (binary)


State 102

   59 and_list: and_list LOGICAL_AND binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 59 (and_list)


State 103

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   62       | binary EQUOP binary .
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 62 (binary)


State 104

   61 binary: binary . RELOP binary
   61       | binary RELOP binary .
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 61 (binary)


State 105

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   63       | binary '+' binary .
   64       | binary . '-' binary

    $default  reduce using rule 63 (binary)


State 106

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary
   64       | binary '-' binary .

    $default  reduce using rule 64 (binary)


State 107

   53 expr: unary '=' expr .

    $default  reduce using rule 53 (expr)


State 108

   80 unary: unary '[' expr . ']'

    ']'  shift, and go to state 127


State 109

   84 unary: unary '(' ')' .

    $default  reduce using rule 84 (unary)


State 110

   85 args: expr .
   86     | expr . ',' args

    ','  shift, and go to state 128

    $default  reduce using rule 85 (args)


State 111

   83 unary: unary '(' args . ')'

    ')'  shift, and go to state 129


State 112

   81 unary: unary '.' ID .

    $default  reduce using rule 81 (unary)


State 113

   82 unary: unary STRUCTOP ID .

    $default  reduce using rule 82 (unary)


State 114

   20 func_decl: type_specifier pointers ID '(' @5 VOID ')' .

    $default  reduce using rule 20 (func_decl)


State 115

   27 param_decl: type_specifier pointers . ID
   28           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 130


State 116

   26 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 79
    struct_specifier  go to state 9
    param_decl        go to state 131


State 117

   22 func_decl: type_specifier pointers ID '(' @6 param_list ')' .

    $default  reduce using rule 22 (func_decl)


State 118

   18 func_decl: type_specifier pointers ID . '(' @4 ')'
   20          | type_specifier pointers ID . '(' @5 VOID ')'
   22          | type_specifier pointers ID . '(' @6 param_list ')'
   31 def: type_specifier pointers ID . ';'
   32    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 132
    '('  shift, and go to state 23
    ';'  shift, and go to state 133


State 119

   41 stmt: RETURN ';' .

    $default  reduce using rule 41 (stmt)


State 120

   42 stmt: RETURN expr . ';'

    ';'  shift, and go to state 134


State 121

   44 stmt: IF '(' . expr ')' stmt
   45     | IF '(' . expr ')' stmt ELSE stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 135
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 122

   46 stmt: WHILE '(' . expr ')' stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 136
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 123

   47 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 137
    expr      go to state 138
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 124

   48 stmt: BREAK ';' .

    $default  reduce using rule 48 (stmt)


State 125

   49 stmt: CONTINUE ';' .

    $default  reduce using rule 49 (stmt)


State 126

   39 stmt: expr ';' .

    $default  reduce using rule 39 (stmt)


State 127

   80 unary: unary '[' expr ']' .

    $default  reduce using rule 80 (unary)


State 128

   86 args: expr ',' . args

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 110
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 139


State 129

   83 unary: unary '(' args ')' .

    $default  reduce using rule 83 (unary)


State 130

   27 param_decl: type_specifier pointers ID .
   28           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 140

    $default  reduce using rule 27 (param_decl)


State 131

   26 param_list: param_list ',' param_decl .

    $default  reduce using rule 26 (param_list)


State 132

   32 def: type_specifier pointers ID '[' . const_expr ']' ';'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 141
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 133

   31 def: type_specifier pointers ID ';' .

    $default  reduce using rule 31 (def)


State 134

   42 stmt: RETURN expr ';' .

    $default  reduce using rule 42 (stmt)


State 135

   44 stmt: IF '(' expr . ')' stmt
   45     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 142


State 136

   46 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 143


State 137

   47 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 144


State 138

   50 expr_e: expr .

    $default  reduce using rule 50 (expr_e)


State 139

   86 args: expr ',' args .

    $default  reduce using rule 86 (args)


State 140

   28 param_decl: type_specifier pointers ID '[' . const_expr ']'

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 145
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 141

   32 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 146


State 142

   44 stmt: IF '(' expr ')' . stmt
   45     | IF '(' expr ')' . stmt ELSE stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    ';'            shift, and go to state 91
    '{'            shift, and go to state 19

    compound_stmt  go to state 93
    stmt           go to state 147
    expr           go to state 95
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 143

   46 stmt: WHILE '(' expr ')' . stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    ';'            shift, and go to state 91
    '{'            shift, and go to state 19

    compound_stmt  go to state 93
    stmt           go to state 148
    expr           go to state 95
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 144

   47 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 149
    expr      go to state 138
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 145

   28 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 150


State 146

   32 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 151


State 147

   44 stmt: IF '(' expr ')' stmt .
   45     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 152

    $default  reduce using rule 44 (stmt)


State 148

   46 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 46 (stmt)


State 149

   47 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 153


State 150

   28 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 28 (param_decl)


State 151

   32 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 32 (def)


State 152

   45 stmt: IF '(' expr ')' stmt ELSE . stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    ';'            shift, and go to state 91
    '{'            shift, and go to state 19

    compound_stmt  go to state 93
    stmt           go to state 154
    expr           go to state 95
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 153

   47 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 155
    expr      go to state 138
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 154

   45 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 45 (stmt)


State 155

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 156


State 156

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    ID             shift, and go to state 28
    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    RETURN         shift, and go to state 85
    IF             shift, and go to state 86
    WHILE          shift, and go to state 87
    FOR            shift, and go to state 88
    BREAK          shift, and go to state 89
    CONTINUE       shift, and go to state 90
    ';'            shift, and go to state 91
    '{'            shift, and go to state 19

    compound_stmt  go to state 93
    stmt           go to state 157
    expr           go to state 95
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 157

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 47 (stmt)
